////////////////////////////////////////////////////////////////////////
//                                                                    //
// This program computes the determinant of a square matrix A.        //
//                                                                    //
////////////////////////////////////////////////////////////////////////
// This procedure computes the determinant of the matrix a. The matrix a 
// is represented as a list of its rows.
determinant := procedure(a) {
    n := #a;              
    sign := 1;
    for (i in [1 .. n]) {
        r := pivot(a, n, i);
        if (r != i) {
            [ a[i], a[r] ] := [ a[r], a[i] ];   
            sign := -sign;
        }
        if (a[i][i] == 0) {
            return 0;
        }
        for (k in [i+1 .. n] | k != i) {
            f := a[k][i]/a[i][i];
            for (j in [i .. n]) {
                a[k][j] -= f * a[i][j];
            }
        }    
    }
    return sign */ { a[i][i] : i in {1 .. n} };
};

// Compute the row index j such that the absolute value of
// a[j][i] is maximal among all j in in {i .. n}.
pivot := procedure(a, n, i) {
    r := i;  // index of row containing maximal element
    for (j in [i+1 .. n]) {
        if (abs(a[j][i]) > abs(a[r][i])) {
            r := j;
        }
    }
    return r;
};

////////////////////////////////////////////////////////////////////////
//                                                                    //
// Testing and printing.                                              //
//                                                                    //
////////////////////////////////////////////////////////////////////////

// turns a quadratic matrix into a string
toString := procedure(a) {
    n := #a;
    r := [1 .. n];
    w := max({ #(a[i][j] + "") : i in r, j in r });
    s := "";
    for (i in r) {
        for (j in r) {
            s += pad(a[i][j], w) + " ";
        }    
        s += "\n";
    }
    return s;
};

// left pad string s to have length w
pad := procedure(n, w) {
    s := n + "";
    return " " * (w - #s) + s;
};

test := procedure(a) {
    d := determinant(a);
    print("The determinant of:\n\n$toString(a)$\nis $d$.\n");
};

a := [ [1, 2, 3, 4],
       [2, 3, 4, 1],
       [3, 4, 1, 2],
       [4, 1, 2, 3]
     ];

test(a);

a := [ [1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]
     ];

test(a);

a := [ [ 2,  3,  5],
       [ 7, 11, 13],
       [17, 19, 23]
     ];

test(a);
