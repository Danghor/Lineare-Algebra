load("inverse-pure.stlx");

test := procedure(A) {
    B := inverse(A);
    if (B == om) { 
        print("The matrix:\n\n$toString(A)$\nis not invertible");
    } else {
        print("The inverse of:\n\n$toString(A)$\nis\n\n$toString(B)$");
        print("test: A * inverse(A) = \n");
        print( toString(product(A, B)) );
        print("test: inverse(A) * A = \n");
        print( toString(product(B, A)) );
    }
};

A := [ [3, 2, 1],
       [2, 3, 1],
       [1, 2, 3]
     ];

test(A);

S := { 1 .. 20 };
n := 40;
K := [1 .. n];
A := [ [ rnd(S) : i in K ] : j in K ];
print(inverse(A));
