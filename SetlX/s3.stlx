// The procedure call product(r1, r2) computes the relational
// product r1 o r2.
product := procedure(r1, r2) {
    return { [x,z] : [x,y] in r1, [y,z] in r2 };
};
// First, we define the six members of s3:
p1 := {[1, 1], [2, 2], [3, 3]};
p2 := {[1, 1], [2, 3], [3, 2]};
p3 := {[1, 2], [2, 1], [3, 3]};
p4 := {[1, 3], [2, 2], [3, 1]};
p5 := {[1, 2], [2, 3], [3, 1]};
p6 := {[1, 3], [2, 1], [3, 2]};
// Next, s3 is the set of all the permutation defined above:
s3 := {p1, p2, p3, p4, p5, p6};
// Can we find x and y in s3 such that x * y != y * x?
for (x in s3, y in s3) {
    xy := product(x, y);
    yx := product(y, x);
    if (xy != yx) {
        print("$x$ * $y$ = $xy$");
        print("$y$ * $x$ = $yx$");
        break;
    }
}

